BROKER SCHEMA pe.com.bbva.trea

CREATE FUNCTION ConvertReferenceToBitStream( IN RefRoot     REFERENCE, 
										     IN MsgSet		CHARACTER, 
										     IN MsgType		CHARACTER,
										     IN MsgFormat	CHARACTER,
										     IN MsgEncoding	INTEGER,
										     IN MsgCCSID	INTEGER	) RETURNS BLOB
BEGIN
	DECLARE dataBlob BLOB;
	SET dataBlob = ASBITSTREAM( RefRoot
								SET 	 MsgSet
								TYPE 	 MsgType
								FORMAT 	 MsgFormat
								ENCODING MsgEncoding
								CCSID 	 MsgCCSID
								OPTIONS  ValidateImmediate);
	RETURN  dataBlob;
END;

	CREATE FUNCTION getCodigoTabla()
	RETURNS CHARACTER  	
	BEGIN
		RETURN getParameterCache(NAME_CODIGO_TABLA);
	END;

	CREATE FUNCTION getClaveTabla()
	RETURNS CHARACTER  	
	BEGIN
		RETURN getParameterCache(NAME_CLAVE_TABLA);
	END;
	
	CREATE FUNCTION getIdiomaTabla()
	RETURNS CHARACTER  	
	BEGIN
		RETURN getParameterCache(NAME_IDIOMA_TABLA);
	END;
	
	CREATE FUNCTION getParameterCache(IN chrParameterName CHARACTER)
	RETURNS CHARACTER  	
	BEGIN
		RETURN 
			COALESCE(( THE(
				SELECT ITEM TRIM(T.Valor) 
					FROM CacheData.ListParameter.Parameter[] AS T
					  WHERE T.Nombre = chrParameterName
			)), EMPTY_CHARACTER) ;
	END;
	
CREATE FUNCTION getCodeTransaction(IN chrOperation CHARACTER)
	RETURNS CHARACTER
	BEGIN
		DECLARE chrCodeTransaction CHARACTER EMPTY_CHARACTER;
		SET chrCodeTransaction =
		  CASE chrOperation
			 WHEN OPERATION_SIMULACION THEN CODE_TRANSACTION_SIMULACION
		     WHEN OPERATION_CATALAGO   THEN CODE_TRANSACTION_CATALAGO
		  	 ELSE EMPTY_CHARACTER 
		  END;
		
		RETURN chrCodeTransaction;
	END; 
	
CREATE FUNCTION ReplaceNullHexa(IN trama BLOB)
RETURNS BLOB
BEGIN
	DECLARE espacio BLOB X'40';
	DECLARE newblob BLOB trama;
	DECLARE lista ROW;
	
	SET lista.hex[1] = X'00';	
	SET lista.hex[2] = X'FF';
	SET lista.hex[3] = X'C29F';
	SET lista.hex[4] = X'0C';
	SET lista.hex[5] = X'03';
	
	FOR hex AS lista.hex[] DO
		SET newblob = REPLACE(newblob,hex,espacio);
	END FOR;
	RETURN newblob;
END;


CREATE FUNCTION ReplaceListCharacter(IN Trama BLOB, IN RefListChar REFERENCE, IN NewChar BLOB)
RETURNS BLOB
BEGIN
	DECLARE NewBlob BLOB Trama;
	
	FOR OldChar AS RefListChar.Char[] DO
		SET NewBlob = REPLACE(NewBlob, CAST(OldChar AS BLOB), NewChar);
	END FOR;
	RETURN NewBlob;
END;

CREATE FUNCTION obtenerSimboloMoneda(IN chrCodigo CHARACTER)
	RETURNS CHARACTER
	BEGIN
		DECLARE chrSimbolo CHARACTER '';
		
		IF chrCodigo = 'USD' THEN
			SET chrSimbolo = '$';
		ELSEIF chrCodigo = 'PEN' THEN
			SET chrSimbolo = 'S/.';
		ELSEIF chrCodigo = 'EUR' THEN
			SET chrSimbolo = 'â‚¬';
		END IF; 
		
		RETURN chrSimbolo;
	END;  	

CREATE FUNCTION GET_MESSAGE_DOMAIN_MRM() RETURNS CHARACTER
BEGIN
	RETURN C_MESSAGE_DOMAIN_MRM;
END;

CREATE FUNCTION CODE_MSG_SUCCESS()
	RETURNS CHARACTER
	BEGIN
		RETURN CODE_MSG_SUCCESS;
	END;  	

	CREATE FUNCTION TITLE_MSG_SUCCESS()
	RETURNS CHARACTER
	BEGIN
		RETURN TITLE_MSG_SUCCESS;
	END;  	

	CREATE FUNCTION CODE_MSG_ERROR()
	RETURNS CHARACTER
	BEGIN
		RETURN CODE_MSG_ERROR;
	END;  	

	CREATE FUNCTION TITLE_MSG_ERROR()
	RETURNS CHARACTER
	BEGIN
		RETURN TITLE_MSG_ERROR;
	END;  	
	
CREATE FUNCTION OPERATION_SIMULACION()
	RETURNS CHARACTER
	BEGIN
		RETURN OPERATION_SIMULACION;
	END;  	

	CREATE FUNCTION OPERATION_CATALOGO()
	RETURNS CHARACTER
	BEGIN
		RETURN OPERATION_CATALAGO;
	END;  	

	CREATE FUNCTION RESPONSE_TYPE_CONVERSATIONAL()
	RETURNS CHARACTER
	BEGIN
		RETURN RESPONSE_TYPE_CONVERSATIONAL;
	END;  	

	CREATE FUNCTION RESPONSE_TYPE_TRANSACTIONAL()
	RETURNS CHARACTER
	BEGIN
		RETURN RESPONSE_TYPE_TRANSACTIONAL;
	END;  	

	CREATE FUNCTION RESPONSE_MSG_SUCCESS()
	RETURNS CHARACTER
	BEGIN
		RETURN RESPONSE_MSG_SUCCESS;
	END;  	

	CREATE FUNCTION getElementResponse(IN chrOperation CHARACTER)
	RETURNS CHARACTER
	BEGIN
		DECLARE chrElementResponse CHARACTER EMPTY_CHARACTER;
		SET chrElementResponse =
		  CASE chrOperation
			 WHEN OPERATION_SIMULACION THEN RES_ELEMENT_SIMULACION
		     WHEN OPERATION_CATALAGO   THEN RES_ELEMENT_CATALAGO
		  	 ELSE EMPTY_CHARACTER 
		  END;
		
		RETURN chrElementResponse;
	END;  	
	